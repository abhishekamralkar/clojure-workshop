;;klipse
;; maps

literal
datastructure and implementation - complexities
immutability

dynamic - key and value types are not static

operations
keywords as functions
namespaced keys
maps as functions
lookups - get, get-in
assoc - one kv and many kvs
dissoc
update update-in
select-keys
merge
map-keys, map-vals (medley)
lookping over key-vals
destructuring maps - keys, strs, or, as directives - edge case
{:a nil} -> or will not override - so to do defaults, merge with defaults
single map destructuring

usage -> entities - nesting, args
keyword arguments [& {:keys []}]

constructing maps - literal, from a sequence (into {}) - map entries
kinds of mapshash-map, array-map, ordered-map, sorted-map
-> keywords true -> middleware params, json, etc
different kinds of maps
